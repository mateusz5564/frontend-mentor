{"version":3,"sources":["components/AddTask.js","components/Task.js","components/FilterTasks.js","components/DisplayTasks.js","App.js","index.js"],"names":["AddTask","tasks","setTasks","uniqueId","setUniqueId","useState","taskName","setTaskName","onSubmit","e","preventDefault","task","newTasks","concat","addTask","newTask","id","name","isDone","prevState","generateTask","className","aria-label","onChange","target","value","type","placeholder","Task","onDelete","role","aria-checked","onClick","updatedTask","map","xmlns","width","height","fill","stroke","strokeWidth","d","focusable","fillRule","FilterTasks","filter","setFilter","styleName","updateFilter","textContent","toLowerCase","DisplayTasks","taskToDelete","getActiveTasks","getCompletedTasks","renderTasks","index","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","onDragEnd","result","destination","source","droppableId","taskIndex","findIndex","Number","Array","from","splice","droppableProps","length","App","darkMode","setDarkMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cee4eca.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction AddTask({ tasks, setTasks, uniqueId, setUniqueId }) {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n\r\n  const onChange = e => {\r\n    setTaskName(e.target.value);\r\n  };\r\n\r\n  const generateTask = taskName => {\r\n    const newTask = {\r\n      id: uniqueId,\r\n      name: taskName,\r\n      isDone: false,\r\n    };\r\n    setUniqueId(prevState => prevState + 1);\r\n    return newTask;\r\n  };\r\n\r\n  const addTask = task => {\r\n    const newTasks = tasks.concat([task]);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    addTask(generateTask(taskName));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"AddTask\">\r\n      <button className=\"AddTask__btn\" aria-label=\"add task\"></button>\r\n      <input\r\n        className=\"AddTask__input\"\r\n        onChange={onChange}\r\n        value={taskName}\r\n        type=\"text\"\r\n        placeholder=\"Create a new todo...\"\r\n        aria-label=\"task name\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","function Task({ task, tasks, setTasks, onDelete }) {\r\n  const toggleStatus = () => {\r\n    const updatedTask = { ...task, isDone: !task.isDone };\r\n    const newTasks = tasks.map(task => (task.id === updatedTask.id ? updatedTask : task));\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div className={task.isDone ? \"Task Task--done\" : \"Task\"}>\r\n      <button\r\n        className=\"Task__btn-check\"\r\n        role=\"checkbox\"\r\n        aria-checked={task.isDone}\r\n        aria-label=\"is task done\"\r\n        onClick={toggleStatus}\r\n      >\r\n        {task.isDone && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\">\r\n            <path fill=\"none\" stroke=\"#FFF\" strokeWidth=\"2\" d=\"M1 4.304L3.696 7l6-6\" />\r\n          </svg>\r\n        )}\r\n      </button>\r\n      <p className=\"Task__name\">{task.name}</p>\r\n      <button className=\"Task__btn-delete\" onClick={() => onDelete(task)} aria-label=\"delete task\">\r\n        <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\">\r\n          <path\r\n            className=\"Task__btn-cross\"\r\n            fill=\"#494C6B\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","function FilterTasks({ filter, setFilter, styleName }) {\r\n  const updateFilter = e => {\r\n    setFilter(e.target.textContent.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className={`FilterTasks ${styleName}`}>\r\n      <button\r\n        className={`FilterTasks__btn ${filter === \"all\" ? \"FilterTasks__btn--active\" : \"\"}`}\r\n        onClick={updateFilter}\r\n      >\r\n        All\r\n      </button>\r\n      <button\r\n        className={`FilterTasks__btn ${filter === \"active\" ? \"FilterTasks__btn--active\" : \"\"}`}\r\n        onClick={updateFilter}\r\n      >\r\n        Active\r\n      </button>\r\n      <button\r\n        className={`FilterTasks__btn ${filter === \"completed\" ? \"FilterTasks__btn--active\" : \"\"}`}\r\n        onClick={updateFilter}\r\n      >\r\n        Completed\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterTasks;\r\n","import Task from \"./Task\";\r\nimport FilterTasks from \"./FilterTasks\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nfunction DisplayTasks({ tasks, setTasks, filter, setFilter }) {\r\n  const onDelete = taskToDelete => {\r\n    const newTasks = tasks.filter(task => task.id !== taskToDelete.id);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const onDeleteCompleted = () => {\r\n    const newTasks = tasks.filter(task => !task.isDone);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const getActiveTasks = () => tasks.filter(task => !task.isDone);\r\n  const getCompletedTasks = () => tasks.filter(task => task.isDone);\r\n\r\n  const onDragEnd = result => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    const taskIndex = tasks.findIndex(task => task.id === Number(draggableId));\r\n    const newTasks = Array.from(tasks);\r\n    newTasks.splice(source.index, 1);\r\n    newTasks.splice(destination.index, 0, tasks[taskIndex]);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const renderTasks = tasks => {\r\n    let tasksToDisplay;\r\n\r\n    if (filter === \"active\") {\r\n      tasksToDisplay = getActiveTasks();\r\n    } else if (filter === \"completed\") {\r\n      tasksToDisplay = getCompletedTasks();\r\n    } else {\r\n      tasksToDisplay = tasks;\r\n    }\r\n\r\n    return tasksToDisplay.map((task, index) => {\r\n      return (\r\n        <Draggable draggableId={String(task.id)} key={task.id} index={index}>\r\n          {provided => (\r\n            <li\r\n              className=\"DisplayTasks__item\"\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              <Task\r\n                task={task}\r\n                index={index}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n                onDelete={onDelete}\r\n              />\r\n            </li>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"DisplayTasks\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId={\"tasks-list\"}>\r\n          {provided => (\r\n            <ul className=\"DisplayTasks__list\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              {renderTasks(tasks)}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <footer className=\"DisplayTasks__footer\">\r\n        <div className=\"DisplayTasks__footer-top\">\r\n          <p className=\"DisplayTasks__items-left\">{getActiveTasks().length} items left</p>\r\n          <FilterTasks\r\n            styleName=\"DisplayTasks__filters-desktop\"\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n          />\r\n          <button className=\"DisplayTasks__btn-clear\" onClick={onDeleteCompleted}>\r\n            Clear Completed\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"DisplayTasks__footer-down\">\r\n          <FilterTasks\r\n            styleName=\"DisplayTasks__filters-mobile\"\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n          />\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DisplayTasks;\r\n","import { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport DisplayTasks from \"./components/DisplayTasks\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      name: \"Task 1\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      name: \"Task 2\",\n      isDone: true,\n    },\n    {\n      id: 3,\n      name: \"Task 3\",\n      isDone: false,\n    },\n    {\n      id: 4,\n      name: \"Task 4\",\n      isDone: true,\n    },\n  ]);\n  const [uniqueId, setUniqueId] = useState(tasks.length + 1);\n  const [filter, setFilter] = useState(\"all\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = () => {\n    setDarkMode(prevState => !prevState);\n  };\n\n  return (\n    <div className={`App ${darkMode ? \"dark\" : \"\"}`}>\n      <div className=\"container\">\n        <header className=\"App__header\">\n          <h1 className=\"App__heading\">Todo</h1>\n          <button className=\"App__btn-theme\" onClick={toggleDarkMode} aria-label=\"toggle dark mode\">\n            {!darkMode && (\n              <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\n                <path\n                  fill=\"#FFF\"\n                  fillRule=\"evenodd\"\n                  d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"\n                />\n              </svg>\n            )}\n            {darkMode && (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\n                <path\n                  fill=\"#FFF\"\n                  fillRule=\"evenodd\"\n                  d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"\n                />\n              </svg>\n            )}\n          </button>\n        </header>\n        <main>\n          <AddTask\n            tasks={tasks}\n            setTasks={setTasks}\n            uniqueId={uniqueId}\n            setUniqueId={setUniqueId}\n          />\n          <DisplayTasks tasks={tasks} setTasks={setTasks} filter={filter} setFilter={setFilter} />\n        </main>\n        <footer className=\"App__footer\">Drag and drop to reorder list</footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}